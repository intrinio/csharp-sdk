


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Intrinio.SDK.Api;
using Intrinio.SDK.Model;
using Intrinio.SDK.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Intrinio.SDK.Test
{
    /// <summary>
    ///  Class for testing ETFHolding
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class ETFHoldingTests
    {
        // TODO uncomment below to declare an instance variable for ETFHolding
        //private ETFHolding instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of ETFHolding
            //instance = new ETFHolding();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ETFHolding
        /// </summary>
        [Test]
        public void ETFHoldingInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" ETFHolding
            //Assert.IsInstanceOfType<ETFHolding> (instance, "variable 'instance' is a ETFHolding");
        }


        /// <summary>
        /// Test the property 'AsOfDate'
        /// </summary>
        [Test]
        public void AsOfDateTest()
        {
            // TODO unit test for the property 'AsOfDate'
        }
        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Test]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'Ticker'
        /// </summary>
        [Test]
        public void TickerTest()
        {
            // TODO unit test for the property 'Ticker'
        }
        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Test]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }
        /// <summary>
        /// Test the property 'CompositeFigi'
        /// </summary>
        [Test]
        public void CompositeFigiTest()
        {
            // TODO unit test for the property 'CompositeFigi'
        }
        /// <summary>
        /// Test the property 'ShareClassFigi'
        /// </summary>
        [Test]
        public void ShareClassFigiTest()
        {
            // TODO unit test for the property 'ShareClassFigi'
        }
        /// <summary>
        /// Test the property 'Isin'
        /// </summary>
        [Test]
        public void IsinTest()
        {
            // TODO unit test for the property 'Isin'
        }
        /// <summary>
        /// Test the property 'Ric'
        /// </summary>
        [Test]
        public void RicTest()
        {
            // TODO unit test for the property 'Ric'
        }
        /// <summary>
        /// Test the property 'Sedol'
        /// </summary>
        [Test]
        public void SedolTest()
        {
            // TODO unit test for the property 'Sedol'
        }
        /// <summary>
        /// Test the property 'Face'
        /// </summary>
        [Test]
        public void FaceTest()
        {
            // TODO unit test for the property 'Face'
        }
        /// <summary>
        /// Test the property 'Coupon'
        /// </summary>
        [Test]
        public void CouponTest()
        {
            // TODO unit test for the property 'Coupon'
        }
        /// <summary>
        /// Test the property 'MarketValueHeld'
        /// </summary>
        [Test]
        public void MarketValueHeldTest()
        {
            // TODO unit test for the property 'MarketValueHeld'
        }
        /// <summary>
        /// Test the property 'NotionalValue'
        /// </summary>
        [Test]
        public void NotionalValueTest()
        {
            // TODO unit test for the property 'NotionalValue'
        }
        /// <summary>
        /// Test the property 'Maturity'
        /// </summary>
        [Test]
        public void MaturityTest()
        {
            // TODO unit test for the property 'Maturity'
        }
        /// <summary>
        /// Test the property 'QuantityHeld'
        /// </summary>
        [Test]
        public void QuantityHeldTest()
        {
            // TODO unit test for the property 'QuantityHeld'
        }
        /// <summary>
        /// Test the property 'Weighting'
        /// </summary>
        [Test]
        public void WeightingTest()
        {
            // TODO unit test for the property 'Weighting'
        }
        /// <summary>
        /// Test the property 'QuantityUnits'
        /// </summary>
        [Test]
        public void QuantityUnitsTest()
        {
            // TODO unit test for the property 'QuantityUnits'
        }
        /// <summary>
        /// Test the property 'QuantityPerShare'
        /// </summary>
        [Test]
        public void QuantityPerShareTest()
        {
            // TODO unit test for the property 'QuantityPerShare'
        }
        /// <summary>
        /// Test the property 'ContractExpiryDate'
        /// </summary>
        [Test]
        public void ContractExpiryDateTest()
        {
            // TODO unit test for the property 'ContractExpiryDate'
        }

    }

}
