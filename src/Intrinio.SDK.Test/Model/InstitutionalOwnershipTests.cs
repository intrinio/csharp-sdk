


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Intrinio.SDK.Api;
using Intrinio.SDK.Model;
using Intrinio.SDK.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Intrinio.SDK.Test
{
    /// <summary>
    ///  Class for testing InstitutionalOwnership
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class InstitutionalOwnershipTests
    {
        // TODO uncomment below to declare an instance variable for InstitutionalOwnership
        //private InstitutionalOwnership instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of InstitutionalOwnership
            //instance = new InstitutionalOwnership();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of InstitutionalOwnership
        /// </summary>
        [Test]
        public void InstitutionalOwnershipInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" InstitutionalOwnership
            //Assert.IsInstanceOfType<InstitutionalOwnership> (instance, "variable 'instance' is a InstitutionalOwnership");
        }


        /// <summary>
        /// Test the property 'OwnerCik'
        /// </summary>
        [Test]
        public void OwnerCikTest()
        {
            // TODO unit test for the property 'OwnerCik'
        }
        /// <summary>
        /// Test the property 'OwnerName'
        /// </summary>
        [Test]
        public void OwnerNameTest()
        {
            // TODO unit test for the property 'OwnerName'
        }
        /// <summary>
        /// Test the property 'PeriodEnded'
        /// </summary>
        [Test]
        public void PeriodEndedTest()
        {
            // TODO unit test for the property 'PeriodEnded'
        }
        /// <summary>
        /// Test the property 'Value'
        /// </summary>
        [Test]
        public void ValueTest()
        {
            // TODO unit test for the property 'Value'
        }
        /// <summary>
        /// Test the property 'Amount'
        /// </summary>
        [Test]
        public void AmountTest()
        {
            // TODO unit test for the property 'Amount'
        }
        /// <summary>
        /// Test the property 'SoleVotingAuthority'
        /// </summary>
        [Test]
        public void SoleVotingAuthorityTest()
        {
            // TODO unit test for the property 'SoleVotingAuthority'
        }
        /// <summary>
        /// Test the property 'SharedVotingAuthority'
        /// </summary>
        [Test]
        public void SharedVotingAuthorityTest()
        {
            // TODO unit test for the property 'SharedVotingAuthority'
        }
        /// <summary>
        /// Test the property 'NoVotingAuthority'
        /// </summary>
        [Test]
        public void NoVotingAuthorityTest()
        {
            // TODO unit test for the property 'NoVotingAuthority'
        }
        /// <summary>
        /// Test the property 'PreviousAmount'
        /// </summary>
        [Test]
        public void PreviousAmountTest()
        {
            // TODO unit test for the property 'PreviousAmount'
        }
        /// <summary>
        /// Test the property 'AmountChange'
        /// </summary>
        [Test]
        public void AmountChangeTest()
        {
            // TODO unit test for the property 'AmountChange'
        }
        /// <summary>
        /// Test the property 'AmountPercentChange'
        /// </summary>
        [Test]
        public void AmountPercentChangeTest()
        {
            // TODO unit test for the property 'AmountPercentChange'
        }

    }

}
